
Socket API
----------


SockEng = init_socketengine():
	creates the socket engine handle

Listener = SockEng->create_listener():
	Called with listener details and a callback function
	The callback function will provide a Client structure

Listener->qopts():
	Sets the listener queuing options

Listener->set_packeter():
	Sets the default message deliniator for clients accepted on this listener

Listener->set_parser():
	Sets the default message parser for clients accepted on this listener

Listener->set_onconnect():
	Sets the on-connect handler for clients accepted by this listener

Listener->set_onclose():
	Sets the default onclose handler for clients accepted on this listener

SockEng->poll():
	Will do a socket wait call..

Client->send():
	Enqueue information to send to the client

Client->close():
	Close and destroy the client connection

Client->qopts():
	Set client queuing options

Group = SockEng->create_group():
	Creates a group to which clients can be associated

Group->add():
	Add a client to a group

Group->remove():
	Remove a client from a group

Group->destroy():
	Destroy a group.

Group = Group->create_subgroup():
	Create a group owned by a higher level group.

Group->send():
	Send a message to a group.

Group->send_butone():
	Send a message to a group except one client.


Function requirements:

Listenerer Callback:
	- Acts as an on-connect hook function.  Optional.

Packeter:
	- Recieves a buffer from a client and returns the length to the
	  end of a single message (to be passed to the parser).

Parser:
	- Recieves a message buffer, start and end pointers to the message
	  for a specific client.
